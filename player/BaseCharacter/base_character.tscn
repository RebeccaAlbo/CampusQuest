[gd_scene load_steps=10 format=3 uid="uid://3kjk4w0wer4"]

[ext_resource type="PackedScene" uid="uid://dwa2t136eppp" path="res://player/BaseCharacter/BaseCharacter.glb" id="1_7qjkn"]
[ext_resource type="Script" path="res://player/BaseCharacter/pc_camera.gd" id="2_evs34"]

[sub_resource type="GDScript" id="GDScript_vpnrk"]
script/source = "extends CharacterBody3D

@onready var animation_player: AnimationPlayer = $AnimationPlayer
@onready var armature: Node3D = $Armature
@onready var spring_arm_pivot: Node3D = $SpringArmPivot
@onready var spring_arm: SpringArm3D = $SpringArmPivot/SpringArm3D
@onready var anim_tree: AnimationTree = $AnimationTree
@onready var actionable_finder: Area3D = $Direction/ActionableFinder
@onready var phone_camera: Camera3D = $PhoneCamera

const SPEED = 30.0
const JUMP_VELOCITY = 4.5
const LERP_VAL = .15

var can_move: bool = true

var skin_colors = [
	Color(0.98, 0.9, 0.78),   # Very light cream 
	Color(0.95, 0.82, 0.65),  # Light 
	Color(0.75, 0.6, 0.45),   # Tan 
	Color(0.45, 0.35, 0.25),  # Medium brown 
	Color(0.28, 0.2, 0.12)    # Dark brown 
]

var hair_styles = [
	$Armature/Skeleton3D/Hair1,
	$Armature/Skeleton3D/Hair2,
	$Armature/Skeleton3D/Hair3,
	$Armature/Skeleton3D/Hair4,
	$Armature/Skeleton3D/Hair5,
	$Armature/Skeleton3D/Hair6
]

var pant_colors = [
	Color(0.05, 0.05, 0.05),     # Black
	Color(0.6, 0.8, 1.0),        # Light Blue
	Color(0.1, 0.2, 0.4),        # Dark Blue
	Color(0.9, 0.85, 0.7),       # Light Beige
	Color(0.6, 0.5, 0.35)        # Dark Beige
]

var shirt_colors = [
	Color(0.95, 0.95, 0.95),     # Off-White / Light Gray-White
	Color(0.05, 0.05, 0.05),     # Black
	Color(0.7, 0.5, 0.1),        # Muted Orange
	Color(0.5, 0.0, 0.0),        # Dark Red
	Color(0.15, 0.3, 0.15),      # Muted Green
	Color(0.1, 0.2, 0.4),        # Desaturated Blue
	Color(0.5, 0.3, 0.4),        # Dusty Pink
	Color(0.7, 0.6, 0.1)         # Warm Muted Yellow
]

var shoes_colors = [
	Color(0.95, 0.95, 0.95),     # Off-White / Light Gray-White
	Color(0.05, 0.05, 0.05),     # Black
	Color(0.4, 0.3, 0.2),        # Dark Brown
	Color(0.7, 0.55, 0.4),       # Light Brown / Tan
	Color(0.2, 0.3, 0.5)         # Muted Navy Blue
]

var current_skin_index = 0
var current_hair_index = 0
var current_pant_index = 0
var current_shirt_index = 0
var current_shoes_index = 0
var prev_hair

func _ready():
	add_to_group(\"player\")
	prev_hair = hair_styles[current_hair_index]
	
	if GameState.is_mobile:
		phone_camera.current = true
		
func _unhandled_input(event: InputEvent) -> void:
	# Mouse control viewpoint
	if event is InputEventMouseMotion:
		spring_arm_pivot.rotate_y(-event.relative.x * .001)
		spring_arm.rotate_x(-event.relative.y * .001)
		# No infinite rotation
		spring_arm.rotation.x = clamp(spring_arm.rotation.x, -PI/4, PI/4)
		
	if Input.is_action_just_pressed(\"interact\"):
		var actionables = actionable_finder.get_overlapping_areas()
		if actionables.size() > 0:
			actionables[0].action()
			return

func _physics_process(delta: float) -> void:
	if !can_move:
		return
		
	# Handle jump.
	if Input.is_action_just_pressed(\"jump\") and is_on_floor():
		velocity.y = JUMP_VELOCITY
	
	# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir := Input.get_vector(\"left\", \"right\", \"up\", \"down\")
	var direction := (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	# Mouse control direction of character
	direction = direction.rotated(Vector3.UP, spring_arm_pivot.rotation.y)
	if direction:
		velocity.x = lerp(velocity.x, direction.x * SPEED, LERP_VAL)
		velocity.z = lerp(velocity.z, direction.z * SPEED, LERP_VAL)
		armature.rotation.y = lerp_angle(armature.rotation.y, atan2(-velocity.x, -velocity.z), LERP_VAL)
	else:
		velocity.x = lerp(velocity.x, 0.0, LERP_VAL)
		velocity.z = lerp(velocity.z, 0.0, LERP_VAL)
		
	anim_tree.set(\"parameters/BlendSpace1D/blend_position\", velocity.length() / SPEED)

	move_and_slide()
	
func in_dialogue():
	velocity = Vector3.ZERO
	anim_tree.set(\"parameters/BlendSpace1D/blend_position\", 0.0)
	can_move = false
	
func end_dialoque():
	can_move = true
	
func change_skin_color(direction: int):
	current_skin_index = (current_skin_index + direction) % skin_colors.size()
	if current_skin_index < 0:
		current_skin_index = skin_colors.size() - 1
	update_skin_color()

func update_skin_color():
	var skin = $Armature/Skeleton3D/Body
	if skin == null:
		print(\"skin not found\")
		return
		
	var material = skin.get_surface_override_material(0)
	
	if material == null:
		material = skin.get_active_material(0).duplicate()
		skin.set_surface_override_material(0, material)

	material.albedo_color = skin_colors[current_skin_index]

func change_hair(direction: int):
	current_hair_index = (current_hair_index + direction) % hair_styles.size()
	if current_hair_index < 0:
		current_hair_index = hair_styles.size() - 1
	update_hair_style()
		
func update_hair_style():
	prev_hair.visible = false
	var current_hair = hair_styles[current_hair_index]
	current_hair.visible = true
	prev_hair = current_hair

func change_pant_color(direction: int):
	current_pant_index = (current_pant_index + direction) % pant_colors.size()
	if current_pant_index < 0:
		current_pant_index = pant_colors.size() - 1
	update_pant_color()

func update_pant_color():
	var pant = $Armature/Skeleton3D/Pants1
	var material = pant.get_surface_override_material(0)
	if material == null:
		material = pant.get_active_material(0).duplicate()
		pant.set_surface_override_material(0, material)
	material.albedo_color = pant_colors[current_pant_index]

func change_shirt_color(direction: int):
	current_shirt_index = (current_shirt_index + direction) % shirt_colors.size()
	if current_shirt_index < 0:
		current_shirt_index = shirt_colors.size() - 1
	update_shirt_color()	
	
func update_shirt_color():
	var shirt = $Armature/Skeleton3D/Shirt
	var material = shirt.get_surface_override_material(0)
	if material == null:
		material = shirt.get_active_material(0).duplicate()
		shirt.set_surface_override_material(0, material)
	material.albedo_color = shirt_colors[current_shirt_index]
	
func change_shoes_color(direction: int):
	current_shoes_index = (current_shoes_index + direction) % shoes_colors.size()
	if current_shoes_index < 0:
		current_shoes_index = shoes_colors.size() - 1
	update_shoes_color()

func update_shoes_color():
	var shoes = $Armature/Skeleton3D/Shoe
	var material = shoes.get_surface_override_material(0)
	if material == null:
		material = shoes.get_active_material(0).duplicate()
		shoes.set_surface_override_material(0, material)
	material.albedo_color = shoes_colors[current_shoes_index]

func update_character(skin_index: int, hair_index: int, pant_index: int, shirt_index: int, shoes_index: int):
	#Set correct skin color
	var skin = $Armature/Skeleton3D/Body
	var skin_material = skin.get_surface_override_material(0)
	if skin_material == null:
		var base_mat = skin.get_active_material(0)
		if base_mat != null:
			skin_material = base_mat.duplicate()
			skin.set_surface_override_material(0, skin_material)
	if skin_material != null:
		skin_material.albedo_color = skin_colors[skin_index]
	
	#Set correct hair style
	for hair in hair_styles:
		hair.visible = false
	var current_hair = hair_styles[hair_index]
	current_hair.visible = true
	
	#Set correct pant color
	var pants = $Armature/Skeleton3D/Pants1
	var pants_material = pants.get_surface_override_material(0)
	if pants_material == null:
		var active_material = pants.get_active_material(0)
		if active_material != null:
			pants_material = active_material.duplicate()
			pants.set_surface_override_material(0, pants_material)
	if pants_material != null:
		pants_material.albedo_color = pant_colors[pant_index]
	
	#Set correct shirt color
	var shirt = $Armature/Skeleton3D/Shirt
	var shirt_material = shirt.get_surface_override_material(0)
	if shirt_material == null:
		var active_material = shirt.get_active_material(0)
		if active_material != null:
			shirt_material = active_material.duplicate()
			shirt.set_surface_override_material(0, shirt_material)
	if shirt_material != null:
		shirt_material.albedo_color = shirt_colors[shirt_index]
	
	#Set correct shoes color
	var shoes = $Armature/Skeleton3D/Shoe
	var shoes_material = shoes.get_surface_override_material(0)
	if shoes_material == null:
		var active_material = shoes.get_active_material(0)
		if active_material != null:
			shoes_material = active_material.duplicate()
			shoes.set_surface_override_material(0, shoes_material)
	if shoes_material != null:
		shoes_material.albedo_color = shoes_colors[shoes_index]	
"

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_f5v2i"]
radius = 0.38

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_0lhfk"]
animation = &"Idle"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_rwb6n"]
animation = &"Walking"

[sub_resource type="AnimationNodeBlendSpace1D" id="AnimationNodeBlendSpace1D_24idx"]
blend_point_0/node = SubResource("AnimationNodeAnimation_0lhfk")
blend_point_0/pos = 0.0
blend_point_1/node = SubResource("AnimationNodeAnimation_rwb6n")
blend_point_1/pos = 1.0
min_space = 0.0

[sub_resource type="AnimationNodeBlendTree" id="AnimationNodeBlendTree_qjth7"]
nodes/BlendSpace1D/node = SubResource("AnimationNodeBlendSpace1D_24idx")
nodes/BlendSpace1D/position = Vector2(120, 240)
nodes/output/position = Vector2(460, 160)
node_connections = [&"output", 0, &"BlendSpace1D"]

[sub_resource type="SphereShape3D" id="SphereShape3D_q3a5t"]

[node name="BaseCharacter" instance=ExtResource("1_7qjkn")]
collision_layer = 2
collision_mask = 35
script = SubResource("GDScript_vpnrk")

[node name="Skeleton3D" parent="Armature" index="1"]
bones/0/position = Vector3(2.09343e-10, 0.649386, -3.32962e-09)
bones/0/scale = Vector3(1, 1, 1)
bones/1/rotation = Quaternion(-0.101219, -0.000264807, 0.0135792, 0.994771)
bones/1/scale = Vector3(1, 1, 1)
bones/2/rotation = Quaternion(0.083879, 0.000415142, -0.0112401, 0.996412)
bones/2/scale = Vector3(1, 1, 1)
bones/3/position = Vector3(0.0587498, 0.186926, 0.000895387)
bones/3/rotation = Quaternion(-0.0144355, -0.0186091, -0.811777, 0.583493)
bones/4/rotation = Quaternion(-0.0362898, 0.0128226, -0.332907, 0.942174)
bones/4/scale = Vector3(1, 1, 1)
bones/5/rotation = Quaternion(0.0712842, 0.000848591, -0.223144, 0.972175)
bones/5/scale = Vector3(1, 1, 1)
bones/6/rotation = Quaternion(-0.198948, -0.0290447, 0.00706617, 0.979554)
bones/7/rotation = Quaternion(0.0639171, 0.0194365, -0.144877, 0.987192)
bones/7/scale = Vector3(1, 1, 1)
bones/8/rotation = Quaternion(0.0857773, 0.0187153, -0.179476, 0.979837)
bones/8/scale = Vector3(1, 1, 1)
bones/9/rotation = Quaternion(-0.0936894, 0.0226847, 0.0141097, 0.995243)
bones/10/rotation = Quaternion(0.0419097, 0.0304843, -0.0888326, 0.994697)
bones/10/scale = Vector3(1, 1, 1)
bones/11/rotation = Quaternion(0.10345, -0.0148142, -0.308603, 0.945433)
bones/12/rotation = Quaternion(-0.00534418, 0.000375837, 0.0296276, 0.999547)
bones/13/rotation = Quaternion(0.00739821, 0.00775215, -0.150644, 0.98853)
bones/13/scale = Vector3(1, 1, 1)
bones/14/rotation = Quaternion(-0.00985046, 0.0139382, -0.253063, 0.967299)
bones/15/rotation = Quaternion(0.112314, -0.00010383, 0.0135002, 0.993581)
bones/15/scale = Vector3(1, 1, 1)
bones/16/rotation = Quaternion(-0.0975945, 0.000883558, -0.0340599, 0.994643)
bones/17/rotation = Quaternion(0.0803981, -0.011344, -0.330717, 0.940231)
bones/17/scale = Vector3(1, 1, 1)
bones/18/rotation = Quaternion(0.310948, -0.0143828, 0.102768, 0.944745)
bones/19/rotation = Quaternion(0.0179618, 0.00278789, -0.0561577, 0.998256)
bones/20/rotation = Quaternion(-0.00990388, 0.014878, -0.0363639, 0.999179)
bones/20/scale = Vector3(1, 1, 1)
bones/21/position = Vector3(-0.058506, 0.18619, 0.000930058)
bones/21/rotation = Quaternion(-0.0141957, 0.0187742, 0.815426, 0.578383)
bones/22/rotation = Quaternion(-0.0360134, -0.0135793, 0.352553, 0.935)
bones/22/scale = Vector3(1, 1, 1)
bones/23/rotation = Quaternion(0.071137, -0.000881364, 0.231761, 0.970168)
bones/23/scale = Vector3(1, 1, 1)
bones/25/rotation = Quaternion(0.0600533, 0.00776482, 0.0722813, 0.995544)
bones/26/rotation = Quaternion(0.0750214, 0.0223695, -0.0675713, 0.994638)
bones/26/scale = Vector3(1, 1, 1)
bones/28/rotation = Quaternion(0.02616, -0.0172562, 0.0136693, 0.999415)
bones/28/scale = Vector3(1, 1, 1)
bones/29/rotation = Quaternion(0.0525699, 0.029329, 0.0683638, 0.995843)
bones/30/rotation = Quaternion(-0.00534417, -0.000375834, -0.0296276, 0.999547)
bones/31/rotation = Quaternion(-0.00408091, -0.00538477, 0.0739522, 0.997239)
bones/31/scale = Vector3(1, 1, 1)
bones/32/rotation = Quaternion(-0.0577257, -0.00209445, 0.00880429, 0.998291)
bones/33/rotation = Quaternion(0.112314, 0.000103846, -0.0135002, 0.993581)
bones/33/scale = Vector3(1, 1, 1)
bones/34/rotation = Quaternion(-0.108689, -0.00953641, -0.0427158, 0.993112)
bones/35/rotation = Quaternion(0.0350156, -0.011413, 0.0910092, 0.995169)
bones/35/scale = Vector3(1, 1, 1)
bones/36/rotation = Quaternion(0.310948, 0.0143828, -0.102768, 0.944745)
bones/37/rotation = Quaternion(0.0179618, -0.00278787, 0.0561577, 0.998256)
bones/38/rotation = Quaternion(-0.00990392, -0.014878, 0.0363639, 0.999179)
bones/39/rotation = Quaternion(-0.0235304, 5.09533e-08, 0.00314317, 0.999718)
bones/39/scale = Vector3(1, 1, 1)
bones/40/rotation = Quaternion(1.88448e-14, 7.27596e-12, 1.28694e-10, 1)
bones/41/rotation = Quaternion(0.884629, 5.23129e-10, -0.000130766, 0.466296)
bones/41/scale = Vector3(1, 1, 1)
bones/42/rotation = Quaternion(0.748984, 5.3239e-10, -0.000110715, 0.662589)
bones/44/rotation = Quaternion(0.00882159, 0.188605, 0.980298, -0.0580243)
bones/45/rotation = Quaternion(-0.387333, 0.00280876, -0.0473851, 0.920717)
bones/45/scale = Vector3(1, 1, 1)
bones/46/rotation = Quaternion(0.776941, 0.0162089, -0.00517621, 0.629344)
bones/47/rotation = Quaternion(-0.0100008, 0.188548, 0.98088, 0.0471507)
bones/47/scale = Vector3(1, 1, 0.999998)
bones/48/rotation = Quaternion(-0.387332, -0.00280891, 0.0473846, 0.920718)
bones/48/scale = Vector3(1, 1, 1)
bones/49/rotation = Quaternion(0.776941, -0.0162082, 0.00517632, 0.629343)
bones/49/scale = Vector3(1, 1, 1)
bones/51/rotation = Quaternion(-0.707107, 0, 0, 0.707107)
bones/53/rotation = Quaternion(-0.707107, 0, 0, 0.707107)

[node name="Pants1" parent="Armature/Skeleton3D" index="0"]
layers = 4

[node name="Body" parent="Armature/Skeleton3D" index="1"]
layers = 4

[node name="Eyes" parent="Armature/Skeleton3D" index="2"]
layers = 4

[node name="Hair1" parent="Armature/Skeleton3D" index="3"]
layers = 4

[node name="Hair2" parent="Armature/Skeleton3D" index="4"]
visible = false
layers = 4

[node name="Hair3" parent="Armature/Skeleton3D" index="5"]
visible = false
layers = 4

[node name="Hair4" parent="Armature/Skeleton3D" index="6"]
visible = false
layers = 4

[node name="Hair5" parent="Armature/Skeleton3D" index="7"]
visible = false
layers = 4

[node name="Hair6" parent="Armature/Skeleton3D" index="8"]
visible = false
layers = 4

[node name="Shirt" parent="Armature/Skeleton3D" index="9"]
layers = 4

[node name="Shoe" parent="Armature/Skeleton3D" index="10"]
layers = 4

[node name="Teeth_bot" parent="Armature/Skeleton3D" index="11"]
layers = 4

[node name="Teeth_top" parent="Armature/Skeleton3D" index="12"]
layers = 4

[node name="CollisionShape3D" type="CollisionShape3D" parent="." index="2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
visible = false
shape = SubResource("CapsuleShape3D_f5v2i")

[node name="SpringArmPivot" type="Node3D" parent="." index="3"]
visible = false

[node name="SpringArm3D" type="SpringArm3D" parent="SpringArmPivot" index="0"]
collision_mask = 129
spring_length = 8.0

[node name="PCCamera" type="Camera3D" parent="SpringArmPivot/SpringArm3D" index="0"]
transform = Transform3D(1, 0, 0, 0, 0.965926, 0.258819, 0, -0.258819, 0.965926, 0, 1.37829, 0)
cull_mask = 1047551
v_offset = 10.0
script = ExtResource("2_evs34")

[node name="AnimationTree" type="AnimationTree" parent="." index="4"]
tree_root = SubResource("AnimationNodeBlendTree_qjth7")
anim_player = NodePath("../AnimationPlayer")
parameters/BlendSpace1D/blend_position = 0.0

[node name="Direction" type="Marker3D" parent="." index="5"]

[node name="ActionableFinder" type="Area3D" parent="Direction" index="0"]
collision_layer = 0
collision_mask = 16

[node name="CollisionShape3D" type="CollisionShape3D" parent="Direction/ActionableFinder" index="0"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.230567, 0.602855)
shape = SubResource("SphereShape3D_q3a5t")

[node name="PhoneCamera" type="Camera3D" parent="." index="6"]
transform = Transform3D(-1, -4.30829e-09, -6.4118e-08, -6.40747e-08, -0.00938588, 0.999956, -4.90991e-09, 0.999956, 0.00938588, 0, 21.4316, -0.140229)
cull_mask = 1047551
projection = 1
size = 60.0
near = 0.1

[node name="Neck" type="Node3D" parent="." index="7"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.1936, 0.250443)

[node name="DialogueCamera" type="Camera3D" parent="Neck" index="0"]
transform = Transform3D(-1, 2.99004e-08, -8.21505e-08, 0, 0.939693, 0.34202, 8.74228e-08, 0.34202, -0.939693, 0, 0.410583, 0)
cull_mask = 1047547
fov = 60.0
near = 0.1
far = 1000.0
